;problem 1 
(= 2 (decode 3 11 7 29))
(= 65 (decode 61 53 17 2790))
(= 18537 (decode 257 337 17 12448))
;problem 2 

(= 372 (f0 1 100))
(= 166649 (f1 2 100))
(= 1955306480867344777228362527067926618035462310079069284070050905767693701503290108144811525722856451902168587932918070203980277966985596904917499523379163180983562120759190328028563019370600023194207389252045290831353337110462111621649344629580558481508036586483259064037804601813871726256724829650542512804085597488260047504753669953774592552366841536412336435793183321129050628169300638526594661054697624247630094518647713408677873033529326100030306460768543201586107200975483084306711426002990350987074366931369948766941010920610992163685032198040080155364421400173957512228862069928289392031963565205955939703463924846774049153573765575282962709996793508537334062125491509382031857582592714770916655518685923398776615698898637712393294226943333551383408642505325740739968328150575962528416634751394757601590095895998158087737492720495616783927245427194292452946756904603529642517574179174392504392628068295931553537286102237574552408484537434678335730050522933502926307988387549175513415764794113272725584763687660883298341110231794881788103891407430022848334146549782828394606600743271184573405729986353800570240917299144632648957871781572234755090417634098706891171495429543036965596094209785725108628721160297834271627152055428302683684105625410690867269347091291358740881325891766435457437803433729311599951946671853918495949985867149715687772314288869438706893682394634104776595551960586747650314694114471522427623157629358076591446623636567922217474982757755572230478049084792447505752177576340954022530238642193605289674570509779951692359702216765123860539080593585921866875829816857976425018669798959749150641105424985629835534589624824724470286799456765322879643312868327450977187180633724865089999917414682942030976753713079484704998595564129742009530268625147838288434286357539896235851834480111160838718159490431053345358726020352765265518648804018938487040175460163553808567758077794144797056162577320221096788316041668198400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (f2 1 100))
(= 564978 (f3 10 200))
(= 19787798161590610642439949 (f4 50))

;problem 3 

(< (abs (- 0.25 (simpson (lambda (x) (* x x x )) 0 1 100))) 0.01)
(< (abs (- 106344.0 (simpson (lambda (x) (+ (* x x x ) (* 2 x x) (* 41 x) 99)) 0 24 100000))) 1.0)
;problem 4 

(equal? (cons 2 3) (simplify (cons 12 18)))
(equal? (cons 17 12) (add (cons 2 3) (cons 3 4)))
(equal? (cons 1 2) (multiply (cons 2 3) (cons 3 4)))
(equal? (cons 8 9) (divide (cons 2 3) (cons 3 4)))

;problem 5 

(= 3 (minchange 24))
(= 4 (minchange 145))
(= 28 (minchange 1345))

;problem 6 
(and (< (/ (estimate-integral (lambda (x y) (<= (+ (* x x) (* y y)) 25.0)) -8.0 8.0 8.0 -8.0 1000000) 25.0) 3.2)
     (> (/ (estimate-integral (lambda (x y) (<= (+ (* x x) (* y y)) 25.0)) -8.0 8.0 8.0 -8.0 1000000) 25.0) 3.1))
(and (< (/ (estimate-integral (lambda (x y) (<= (+ (* x x) (* y y)) 80.0)) -100.0 100.0 100.0 -100.0 1000000) 80.0) 3.2)
     (> (/ (estimate-integral (lambda (x y) (<= (+ (* x x) (* y y)) 80.0)) -100.0 100.0 100.0 -100.0 1000000) 80.0) 3.1))
;problem 7  

(= 20365011074 (fib-tr 51))
(= 1100087778366101931 (fib-tr 88))
(= 218671051762790578979221216639246350867112363101339852068020636689076790198195320499135117311032860335979403183483 (fib-tr 544))

