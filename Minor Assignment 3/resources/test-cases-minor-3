1. (cprod '((1 2 3) (4 5))) => ((1 4) (1 5) (2 4) (2 5) (3 4) (3 5))
   (cprod '((1 2 3) (4 5) (6))) => ((1 4 6) (1 5 6) (2 4 6) (2 5 6) (3 4 6) (3 5 6))
   (cprod '((1 2 3) () (6))) => ()

2. (fewest-moves '(1 0 1 1 1 0 1 1 0 1 0 1 1 0 0 1 1 1))=> 6
   (fewest-moves '(1 0 1 1 1 0 1 1 0 1 0 1 1 0 )) => 5
   (fewest-moves '()) => 0

3. (reverse-tr '(1 (2 3) 4)) => (4 (2 3) 1))

4.  (rle '(1 1 1 3 3 2 5 5 5 4 4)) => ((1 3) (3 2) (2 1) (5 3) (4 2))
    (rle '(1 1 1 3 3 2 5 5 5 4 4 1 1)) => ((1 3) (3 2) (2 1) (5 3) (4 2) (1 2))
    (rle '()) = ()

5.  (summands 4) => ((1 1 1 1) (1 1 2) (1 2 1) (1 3) (2 1 1) (2 2)
                     (3 1) (4))
    (summands 5) => ((1 1 1 1 1) (1 1 1 2) (1 1 2 1) (1 1 3) (1 2 1 1)
                     (1 2 2) (1 3 1) (1 4) (2 1 1 1) (2 1 2) (2 2 1)
                     (2 3) (3 1 1) (3 2) (4 1) (5))

6.  (gc 3) =>  ((0 0 0) (0 0 1) (0 1 1) (0 1 0) (1 1 0) (1 1 1)
                (1 0 1) (1 0 0))
    (gc 4) =>  ((0 0 0 0) (0 0 0 1) (0 0 1 1) (0 0 1 0) (0 1 1 0) (0 1 1 1)
                (0 1 0 1) (0 1 0 0) (1 1 0 0) (1 1 0 1) (1 1 1 1) (1 1 1 0)
		(1 0 1 0) (1 0 1 1) (1 0 0 1) (1 0 0 0))

7. (define board1 '((3 4 9 5 8 1 7 6 2)
                    (1 8 6 4 2 7 3 5 9)
                    (7 5 2 6 3 9 1 4 8)
                    (4 2 3 8 1 6 5 9 7)
                    (9 6 1 3 7 5 2 8 4)
                    (8 7 5 2 9 4 6 1 3)
                    (6 3 7 1 4 8 9 2 5)
                    (5 9 8 7 6 2 4 3 1)
                    (2 1 4 9 5 3 8 7 6)))

   (check-a board1) => #t
   (check-b board1) => #t
   (check-c board1) => #t		 

8.  (lcs  '(1 2 3 2 4 1) '(2 4 3 1 2 1)) => (2 3 2 1)
    (lcs  '(5 6 4 3 9 6) '(6 5 3 9 2 3)) => (6 3 9)


9.  (shuffle '(1 2) '(3 5 4)) => ((1 2 3 5 4) (1 3 2 5 4) (1 3 5 2 4)
                                  (1 3 5 4 2) (3 1 2 5 4) (3 1 5 2 4)
				  (3 1 5 4 2) (3 5 1 2 4) (3 5 1 4 2)
				  (3 5 4 1 2))
    (shuffle '() '(3 5 4)) => ((3 5 4))
